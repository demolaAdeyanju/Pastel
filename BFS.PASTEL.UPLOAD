SUBROUTINE BFS.PASTEL.UPLOAD(COMP.ID)
*---------------------------------------------------------
* Description     : Main/Run Routine for BFS.PASTEL.UPLOAD
* Date Written    : 2018
* By              : Ademola - Temenos
* Version         : 1.0
*---------------------------------------------------------
  $INSERT I_COMMON
  $INSERT I_EQUATE  
	$INSERT I_F.COMPANY
  $INSERT I_F.RE.STAT.LINE.CONT
	$INSERT I_F.CONSOLIDATE.PRFT.LOSS
  $INSERT I_BFS.PASTEL.UPLOAD.COMMON  
	
	GOSUB PROCESS
	GOSUB WRITE.FILE
	RETURN 

********
PROCESS:
********

	OPEN.CURLY.BRACE = "{"
	CLOSE.CURLY.BRACE = "}"

	OPEN.SQUARE.BRACE = "["
	CLOSE.SQUARE.BRACE = "]"

	LINE.CNT = 0
  BRANCH = ""
  REFERENCE = ""
  BRANCH.DETAILS = ""
	LINE.RECS = OPEN.SQUARE.BRACE

	APPL = "COMPANY"
	FIELD.NAME = "EVO.BRANCH"
	FIELD.POS = ""
	CALL GET.LOC.REF(APPL,FIELD.NAME,FIELD.POS)

  REC.COMPANY = ""
  CALL F.READ(FN.COMPANY,COMP.ID,REC.COMPANY,F.COMPANY,COMPANY.ERR)

  BRANCH = REC.COMPANY<EB.COM.LOCAL.REF,FIELD.POS>	
	IF (BRANCH EQ "") THEN
		RETURN
	END
	
	REFERENCE = BRANCH:"-":REPORT.DATE
	RPT.DATE = REPORT.DATE[1,4]:"-":REPORT.DATE[5,2]:"-":REPORT.DATE[7,2] 

***Process only RE.STAT.LINE.CONT records with COMPANY eq COMP.ID***
	LINE.CONT.SEL.CMD = "SELECT ":FN.RE.STAT.LINE.CONT:" WITH @ID LIKE ...":COMP.ID:" AND @ID LIKE BARKTB... AND TYPE EQ DETAIL" 
	CALL EB.READLIST(LINE.CONT.SEL.CMD,LINE.CONT.LIST,"", NO.OF.LINE,CONT.SEL.ERR)
	
  FOR I = 1 TO DCOUNT(LINE.CONT.LIST,FM)
		LINE.NET.MVT = 0
    LINE.CONT.ID = LINE.CONT.LIST<I>		
    LINE.CONT.COMP = FIELD(LINE.CONT.ID,".",3)
    IF (LINE.CONT.COMP NE COMP.ID) THEN
      CONTINUE
    END
	
    REC.LINE.CONT = ""
		CALL F.READ(FN.RE.STAT.LINE.CONT,LINE.CONT.ID,REC.LINE.CONT,F.RE.STAT.LINE.CONT,LINE.CONT.ERR)
		
		PASTEL.ACCOUNT = REC.LINE.CONT<RE.SLC.DESC,3.1>
		IF (PASTEL.ACCOUNT EQ "") THEN
			CONTINUE
		END
		
    ASST.CONSOL.KEY.ARRAY = REC.LINE.CONT<RE.SLC.ASST.CONSOL.KEY>
	  PRFT.CONSOL.KEY.ARRAY = REC.LINE.CONT<RE.SLC.PRFT.CONSOL.KEY>			
		IF (ASST.CONSOL.KEY.ARRAY EQ "") THEN
			IF (PRFT.CONSOL.KEY.ARRAY EQ "") THEN
				CONTINUE
			END
		END

    IF (ASST.CONSOL.KEY.ARRAY) THEN
			GOSUB PROCESS.ASST.CONSOL.KEYS
		END
		IF (PRFT.CONSOL.KEY.ARRAY) THEN
			GOSUB PROCESS.PRFT.CONSOL.KEYS
		END
		
		IF (LINE.NET.MVT EQ 0) THEN
			CONTINUE
		END
		
***Initialise Line Variables***		
		TRANSACTION.AMT = ""
		ALT.BRANCH.CODE = ""
		ALT.BRANCH.DR.ACCOUNT = ""
		ALT.BRANCH.CR.ACCOUNT = ""
		DESCRIPTION = ""

		DESCRIPTION = REC.LINE.CONT<RE.SLC.DESC,2.1>
		LINE.CNT = LINE.CNT + 1	
		
		TYPE.KEY.VALUE.PAIR = '"type":"0",'
		TRANSACTION.AMT = ABS(LINE.NET.MVT)
		AMOUNT.KEY.VALUE.PAIR = '"amount":':TRANSACTION.AMT:','
		
		IF (LINE.NET.MVT GT 0) THEN
			ACCOUNTDR.KEY.VALUE.PAIR = '"accountdb":"",'
		  ACCOUNTCR.KEY.VALUE.PAIR = '"accountcr":"':PASTEL.ACCOUNT:'",'
		END
		IF (LINE.NET.MVT LT 0) THEN
			ACCOUNTDR.KEY.VALUE.PAIR = '"accountdb":"':PASTEL.ACCOUNT:'",'
			ACCOUNTCR.KEY.VALUE.PAIR = '"accountcr":"",'
		END

		ALTBRANCH.KEY.VALUE.PAIR = '"altbranch":"",'
		ALTACCOUNTDB.KEY.VALUE.PAIR = '"altaccountdb":"",'
		ALTACCOUNTCR.KEY.VALUE.PAIR = '"altaccountcr":"",'
		DESCRIPTION.KEY.VALUE.PAIR = '"description":"':DESCRIPTION:'"'		
	
		LINE.RECS  := OPEN.CURLY.BRACE
		LINE.RECS  := TYPE.KEY.VALUE.PAIR
		LINE.RECS  :=	AMOUNT.KEY.VALUE.PAIR
		LINE.RECS  := ACCOUNTDR.KEY.VALUE.PAIR
		LINE.RECS  := ACCOUNTCR.KEY.VALUE.PAIR
		LINE.RECS  := ALTBRANCH.KEY.VALUE.PAIR
		LINE.RECS  := ALTACCOUNTDB.KEY.VALUE.PAIR
		LINE.RECS  := ALTACCOUNTCR.KEY.VALUE.PAIR
		LINE.RECS  := DESCRIPTION.KEY.VALUE.PAIR
		LINE.RECS  := CLOSE.CURLY.BRACE
		LINE.RECS  := ","				
  NEXT I
	
***Trim the last comma in LINE.RECS***	
	LINE.RECS = TRIM(LINE.RECS,",","T")
  RETURN

*************************
PROCESS.ASST.CONSOL.KEYS:
*************************
	CHANGE VM TO FM IN ASST.CONSOL.KEY.ARRAY
	FOR KK = 1 TO DCOUNT(ASST.CONSOL.KEY.ARRAY,FM)	
		CONSOL.KEY.ID = ASST.CONSOL.KEY.ARRAY<KK>
		IF (CONSOL.KEY.ID[1,2] EQ "RE") THEN
			CONTINUE
		END		
		ASSET.TYPE.ARRAY = REC.LINE.CONT<16,KK>
		CHANGE VM TO FM IN ASSET.TYPE.ARRAY 
		CHANGE SM TO FM IN ASSET.TYPE.ARRAY 		
		FOR AA = 1 TO DCOUNT(ASSET.TYPE.ARRAY,FM)
			ASSET.TYPE     = ASSET.TYPE.ARRAY<AA>
			BALANCE.LCL    = ""
			DR.CR.MVMT.LCL = ""
			CALL RE.EXTRACT.CAL.DETAILS(CONSOL.KEY.ID,"",ASSET.TYPE,MAT.RANGE,INCL.IND,"M",REPORT.DATE,SPLIT.DATES,SPLIT.BALANCES,SPLIT.BALANCES.LCL,BALANCE,BALANCE.LCL,CONTRACT.LIST,DR.CR.MVMT,DR.CR.MVMT.LCL,ERR.MSG)		
			LINE.NET.MVT = LINE.NET.MVT + BALANCE.LCL			
		NEXT AA		
	NEXT KK
	RETURN

*************************
PROCESS.PRFT.CONSOL.KEYS:
*************************
	CHANGE VM TO FM IN PRFT.CONSOL.KEY.ARRAY
	FOR TT = 1 TO DCOUNT(PRFT.CONSOL.KEY.ARRAY,FM)
		CONSOL.KEY.ID = PRFT.CONSOL.KEY.ARRAY<TT>
		IF CONSOL.KEY.ID[1,2] EQ "RE" THEN
			CONTINUE
		END
		REC.CONSOLIDATE.PRFT.LOSS = ""
		CALL F.READ(FN.CONSOLIDATE.PRFT.LOSS,CONSOL.KEY.ID,REC.CONSOLIDATE.PRFT.LOSS,F.CONSOLIDATE.PRFT.LOSS,PRFT.LOSS.ERR)	
		FOR CC = 1 TO DCOUNT(REC.CONSOLIDATE.PRFT.LOSS<RE.PTL.CURRENCY>,VM)
			CCY = FIELD(REC.CONSOLIDATE.PRFT.LOSS<RE.PTL.CURRENCY>,VM, CC)
			CPL.REC = ""			
			BALANCE.LCL    = ""
			DR.CR.MVMT.LCL = ""
			CALL RE.EXTRACT.CPL.DETAILS(CONSOL.KEY.ID,CPL.REC,CCY,PROFIT.SIGN,PROFIT.PERIOD,REPORT.DATE,"M",BALANCE,BALANCE.LCL,DR.CR.MVMT,DR.CR.MVMT.LCL,ERR.MSG)
			LINE.NET.MVT = LINE.NET.MVT + BALANCE.LCL		
		NEXT CC	
	NEXT TT
	RETURN

***********
WRITE.FILE:
***********
	
	BRANCH.KEY.VALUE.PAIR = '"branch":"':BRANCH:'",'
	REFERENCE.KEY.VALUE.PAIR = '"reference":"':REFERENCE:'",'
	DATE.KEY.VALUE.PAIR = '"date":"':RPT.DATE:'",'
	LINE.KEY.VALUE.PAIR = '"lines":'

	BRANCH.DETAILS  = OPEN.CURLY.BRACE
	BRANCH.DETAILS := BRANCH.KEY.VALUE.PAIR
	BRANCH.DETAILS := REFERENCE.KEY.VALUE.PAIR
	BRANCH.DETAILS := DATE.KEY.VALUE.PAIR
	BRANCH.DETAILS := LINE.KEY.VALUE.PAIR
	BRANCH.DETAILS := LINE.RECS
	BRANCH.DETAILS := CLOSE.SQUARE.BRACE
	BRANCH.DETAILS := CLOSE.CURLY.BRACE
	
	IF (LINE.CNT GT 0) THEN
		FILE.POINTER = ""
		
		OPEN FILE.PATH TO FILE.POINTER THEN
		END
	
		WRITE BRANCH.DETAILS TO FILE.POINTER,REFERENCE
		CLOSE FILE.POINTER	
	END
  RETURN
END